apiVersion: apps/v1
kind: Deployment
metadata:
  name: main
  namespace: maya-apps
  labels:
    app: main
    app.kubernetes.io/name: main
    app.kubernetes.io/part-of: maya
    app.kubernetes.io/component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: main
  template:
    metadata:
      labels:
        app: main
        app.kubernetes.io/name: main
        app.kubernetes.io/part-of: maya
        app.kubernetes.io/component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: main-app
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: main
        image: ghcr.io/your-org/maya-main:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3333
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Secrets from Secret objects
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              name: main-app-secrets
              key: app-key
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: redis-password
        - name: LOGTO_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: logto-credentials
              key: client-id
        - name: LOGTO_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: logto-credentials
              key: client-secret
        - name: LOGTO_M2M_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: logto-credentials
              key: m2m-client-id
        - name: LOGTO_M2M_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: logto-credentials
              key: m2m-client-secret
        - name: LOGTO_WEBHOOK_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: logto-credentials
              key: webhook-signing-key
        - name: S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: access-key-id
        - name: S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: secret-access-key
        envFrom:
        - configMapRef:
            name: main-app-config
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-tmp
          mountPath: /app/tmp
        - name: app-uploads
          mountPath: /app/public/uploads
      initContainers:
      - name: migrations
        image: ghcr.io/your-org/maya-main:latest
        command: ["node", "ace", "migration:run", "--force"]
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: postgres-password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: redis-password
        envFrom:
        - configMapRef:
            name: main-app-config
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-tmp
        emptyDir: {}
      - name: app-uploads
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - main
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: main-app
  namespace: maya-apps
  labels:
    app: main
    app.kubernetes.io/name: main
    app.kubernetes.io/part-of: maya